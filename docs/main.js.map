{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/+state/item-list.actions.ts","webpack:///./src/app/+state/item-list.effects.ts","webpack:///./src/app/+state/item-list.reducer.ts","webpack:///./src/app/+state/item-list.selectors.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/item-list/item-list-form/item-list-form.component.html","webpack:///./src/app/item-list/item-list-form/item-list-form.component.scss","webpack:///./src/app/item-list/item-list-form/item-list-form.component.ts","webpack:///./src/app/item-list/item-list-routing.module.ts","webpack:///./src/app/item-list/item-list.component.html","webpack:///./src/app/item-list/item-list.component.scss","webpack:///./src/app/item-list/item-list.component.ts","webpack:///./src/app/item-list/item-list.module.ts","webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.guard.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.service.ts","webpack:///./src/app/models/cup-of-coffee.ts","webpack:///./src/app/models/item.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Action } from '@ngrx/store';\nimport { Entity } from './item-list.reducer';\nimport { Item } from '../models/item';\n\nexport enum ItemListActionTypes {\n    LoadItemList = '[ItemList] Load ItemList',\n    ItemListLoaded = '[ItemList] ItemList Loaded',\n    ItemListLoadError = '[ItemList] ItemList Load Error',\n    AddItem = '[ItemList] Add Item',\n    AddItemSuccess = '[ItemList] Item Added',\n    AddItemError = '[ItemList] Add Item Error',\n    UpdateItem = '[ItemList] Update Item',\n    UpdateItemSuccess = '[ItemList] Item Updated',\n    UpdateItemError = '[ItemList] Update Item Error',\n    DeleteItem = '[ItemList] Remove Item',\n    DeleteItemSuccess = '[ItemList] Item Removed',\n    DeleteItemError = '[ItemList] Remove Item Error',\n}\n\nexport class LoadItemList implements Action {\n    readonly type = ItemListActionTypes.LoadItemList;\n}\n\nexport class ItemListLoadError implements Action {\n    readonly type = ItemListActionTypes.ItemListLoadError;\n    constructor(public payload: any) {}\n}\n\nexport class ItemListLoaded implements Action {\n    readonly type = ItemListActionTypes.ItemListLoaded;\n    constructor(public payload: Entity[]) {}\n}\n\nexport class AddItem implements Action {\n    readonly type = ItemListActionTypes.AddItem;\n    constructor(public payload: Item) {}\n}\n\nexport class AddItemSuccess implements Action {\n    readonly type = ItemListActionTypes.AddItemSuccess;\n    constructor(public payload: Entity[]) {}\n}\n\nexport class AddItemError implements Action {\n    readonly type = ItemListActionTypes.AddItemError;\n    constructor(public payload: any) {}\n}\n\nexport class UpdateItem implements Action {\n    readonly type = ItemListActionTypes.UpdateItem;\n    constructor(public payload: Item) {}\n}\n\nexport class UpdateItemSuccess implements Action {\n    readonly type = ItemListActionTypes.UpdateItemSuccess;\n    constructor(public payload: Entity[]) {}\n}\n\nexport class UpdateItemError implements Action {\n    readonly type = ItemListActionTypes.UpdateItemError;\n    constructor(public payload: any) {}\n}\n\nexport class DeleteItem implements Action {\n    readonly type = ItemListActionTypes.DeleteItem;\n    constructor(public payload: Item) {}   \n}\n\nexport class DeleteItemSuccess implements Action {\n    readonly type = ItemListActionTypes.DeleteItemSuccess;\n    constructor(public payload: Entity[]) {}   \n}\n\nexport class DeleteItemError implements Action {\n    readonly type = ItemListActionTypes.DeleteItemError;\n    constructor(public payload: any) {}   \n}\n\nexport type ItemListAction =\n    LoadItemList |\n    ItemListLoaded |\n    ItemListLoadError |\n    AddItem |\n    AddItemSuccess |\n    AddItemError |\n    UpdateItem |\n    UpdateItemSuccess |\n    UpdateItemError |\n    DeleteItem |\n    DeleteItemSuccess |\n    DeleteItemError\n;\n\nexport const fromItemListActions = {\n    LoadItemList,\n    ItemListLoaded,\n    ItemListLoadError,\n    AddItem,\n    AddItemSuccess,\n    AddItemError,\n    UpdateItem,\n    UpdateItemSuccess,\n    UpdateItemError,\n    DeleteItem,\n    DeleteItemSuccess,\n    DeleteItemError\n};\n","import { Injectable } from '@angular/core';\nimport { Effect, Actions } from '@ngrx/effects';\nimport { DataPersistence } from '@nrwl/nx';\n\nimport { ItemListPartialState } from './item-list.reducer';\nimport {\n    LoadItemList,\n    ItemListLoaded,\n    ItemListLoadError,\n    ItemListActionTypes,\n    UpdateItem,\n    UpdateItemSuccess,\n    UpdateItemError,\n    AddItemSuccess,\n    AddItem,\n    AddItemError,\n    DeleteItem,\n    DeleteItemSuccess,\n    DeleteItemError\n} from './item-list.actions';\nimport { Item } from '../models/item';\n\n@Injectable()\nexport class ItemListEffects {\n    @Effect() loadItemList$ = this.dataPersistence.pessimisticUpdate(\n        ItemListActionTypes.LoadItemList,\n        {\n            run: (action: LoadItemList, state: ItemListPartialState) => {\n                const storage = localStorage.getItem('provenir-coffee');\n                return new ItemListLoaded(JSON.parse(storage));\n            },\n\n            onError: (action: LoadItemList, error) => {\n                // snackbar(error);\n                console.error('Error', error);\n                return new ItemListLoadError(error);\n            }\n        }\n    );\n\n    @Effect() addItem$ = this.dataPersistence.pessimisticUpdate(\n        ItemListActionTypes.AddItem,\n        {\n            run: (action: AddItem, state: ItemListPartialState) => {\n                const storage: Item[] = JSON.parse(localStorage.getItem('provenir-coffee'));\n                const update = [...storage, action.payload].sort((a, b) => a.id - b.id);\n                localStorage.setItem('provenir-coffee', JSON.stringify(update));\n                return new AddItemSuccess(update);\n            },\n\n            onError: (action: AddItem, error) => {\n                // snackbar(error);\n                console.error('Error', error);\n                return new AddItemError(error);\n            }\n        }\n    );\n\n    @Effect() updateItem$ = this.dataPersistence.pessimisticUpdate(\n        ItemListActionTypes.UpdateItem,\n        {\n            run: (action: UpdateItem, state: ItemListPartialState) => {\n                const storage: Item[] = JSON.parse(localStorage.getItem('provenir-coffee'));\n                const update = storage.map(item => item.id === action.payload.id ? action.payload : item);\n                localStorage.setItem('provenir-coffee', JSON.stringify(update));\n                return new UpdateItemSuccess(update);\n            },\n\n            onError: (action: UpdateItem, error) => {\n                // snackbar(error);\n                console.error('Error', error);\n                return new UpdateItemError(error);\n            }\n        }\n    );\n\n    @Effect() deleteItem$ = this.dataPersistence.pessimisticUpdate(\n        ItemListActionTypes.DeleteItem,\n        {\n            run: (action: DeleteItem, state: ItemListPartialState) => {\n                const storage: Item[] = JSON.parse(localStorage.getItem('provenir-coffee'));\n                const update = storage.filter(item => item.id !== action.payload.id);\n                localStorage.setItem('provenir-coffee', JSON.stringify(update));\n                return new DeleteItemSuccess(update);\n            },\n\n            onError: (action: DeleteItem, error) => {\n                // snackbar(error);\n                console.error('Error', error);\n                return new DeleteItemError(error);\n            }\n        }\n    );\n\n    constructor(\n        private actions$: Actions,\n        private dataPersistence: DataPersistence<ItemListPartialState>\n    ) {}\n}","import { ItemListAction, ItemListActionTypes } from './item-list.actions';\n\nexport const ITEMLIST_FEATURE_KEY = 'itemList';\n\n/**\n * Interface for the 'ItemList' data used in\n *  - ItemListState, and\n *  - itemListReducer\n *\n *  Note: replace if already defined in another module\n */\n\n/* tslint:disable:no-empty-interface */\nexport interface Entity {}\n\nexport interface ItemListState {\n    list: Entity[]; // list of ItemList; analogous to a sql normalized table\n    selectedId?: string | number; // which ItemList record has been selected\n    loaded: boolean; // has the ItemList list been loaded\n    error?: any; // last none error (if any)\n}\n\nexport interface ItemListPartialState {\n    readonly [ITEMLIST_FEATURE_KEY]: ItemListState;\n}\n\nexport const initialState: ItemListState = {\n    list: [],\n    loaded: false\n};\n\nexport function itemListReducer(\n    state: ItemListState = initialState,\n    action: ItemListAction\n): ItemListState {\n    switch (action.type) {\n        case ItemListActionTypes.AddItemSuccess:\n        case ItemListActionTypes.UpdateItemSuccess:\n        case ItemListActionTypes.DeleteItemSuccess:\n        case ItemListActionTypes.ItemListLoaded: {\n            // safer to update state each time since\n            // LocalStorage can be easily manipulated\n            state = {\n                ...state,\n                list: action.payload,\n                loaded: true\n            };\n            break;\n        }\n    }\n    return state;\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { ITEMLIST_FEATURE_KEY, ItemListState } from './item-list.reducer';\n\n// Lookup the 'ItemList' feature state managed by NgRx\nconst getItemListState = createFeatureSelector<ItemListState>(\n    ITEMLIST_FEATURE_KEY\n);\n\nconst getLoaded = createSelector(\n    getItemListState,\n    (state: ItemListState) => state.loaded\n);\nconst getError = createSelector(\n    getItemListState,\n    (state: ItemListState) => state.error\n);\n\nconst getAllItemList = createSelector(\n    getItemListState,\n    getLoaded,\n    (state: ItemListState, isLoaded) => {\n        return isLoaded ? state.list : [];\n    }\n);\nconst getSelectedId = createSelector(\n    getItemListState,\n    (state: ItemListState) => state.selectedId\n);\nconst getSelectedItemList = createSelector(\n    getAllItemList,\n    getSelectedId,\n    (itemList, id) => {\n        const result = itemList.find(it => it['id'] === id);\n        return result ? Object.assign({}, result) : undefined;\n    }\n);\n\nexport const itemListQuery = {\n    getLoaded,\n    getError,\n    getAllItemList,\n    getSelectedItemList\n};\n","module.exports = \"<mdl-layout mdl-layout-fixed-header mdl-layout-header-seamed #layout>\\n    <mdl-layout-header>\\n        <mdl-layout-header-row>\\n            <mdl-layout-title>Provenir-Coffee</mdl-layout-title>\\n            <mdl-layout-spacer></mdl-layout-spacer>\\n            <nav class=\\\"mdl-navigation mdl-layout--large-screen-only\\\">\\n                <ng-container *ngTemplateOutlet=\\\"links\\\"></ng-container>\\n            </nav>\\n        </mdl-layout-header-row>\\n    </mdl-layout-header>\\n    <mdl-layout-drawer *ngIf=\\\"isLoggedIn\\\">\\n        <nav class=\\\"mdl-navigation\\\">\\n            <ng-container *ngTemplateOutlet=\\\"links\\\"></ng-container>\\n        </nav>\\n    </mdl-layout-drawer>\\n    <mdl-layout-content>\\n        <router-outlet></router-outlet>\\n    </mdl-layout-content>\\n</mdl-layout>\\n<ng-template #links>\\n    <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/login\\\" (click)=\\\"layout.closeDrawer()\\\">Change User</a>\\n    <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/coffee\\\" (click)=\\\"layout.closeDrawer()\\\">Item List</a>\\n    <a class=\\\"mdl-navigation__link\\\" (click)=\\\"logout(); layout.closeDrawer()\\\">Log Out</a>\\n</ng-template>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2NvZmZlZS9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { LoginService } from './login/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'provenir-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    constructor(private loginService: LoginService, private router: Router) { }\n    title = 'coffee';\n\n    isLoggedIn = this.loginService.isLoggedIn();\n    \n    logout() {\n        this.loginService.logout();\n        this.router.navigate(['login']);\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NxModule } from '@nrwl/nx';\nimport { RouterModule } from '@angular/router';\nimport { LoginModule } from './login/login.module';\nimport { ItemListModule } from './item-list/item-list.module';\nimport { MdlModule } from '@angular-mdl/core';\nimport { MdlSelectModule } from '@angular-mdl/select';\nimport { loginRoutes } from './login/login-routing.module';\nimport { itemListRoutes } from './item-list/item-list-routing.module';\nimport { LoginGuard } from './login/login.guard';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport {\n    ITEMLIST_FEATURE_KEY,\n    initialState as itemListInitialState,\n    itemListReducer\n} from './+state/item-list.reducer';\nimport { ItemListEffects } from './+state/item-list.effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { storeFreeze } from 'ngrx-store-freeze';\n\n@NgModule({\n    declarations: [AppComponent],\n    imports: [\n        BrowserModule,\n        MdlModule,\n        MdlSelectModule,\n        LoginModule,\n        ItemListModule,\n        NxModule.forRoot(),\n        RouterModule.forRoot(\n            [\n                { path: 'login', children: loginRoutes },\n                {\n                    path: 'coffee',\n                    children: itemListRoutes,\n                    canActivate: [LoginGuard]\n                }\n            ],\n            { initialNavigation: 'enabled' }\n        ),\n        StoreModule.forRoot(\n            { itemList: itemListReducer },\n            {\n                initialState: { itemList: itemListInitialState },\n                metaReducers: !environment.production ? [storeFreeze] : []\n            }\n        ),\n        EffectsModule.forRoot([ItemListEffects]),\n        !environment.production ? StoreDevtoolsModule.instrument() : [],\n        StoreRouterConnectingModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"<form [formGroup]=\\\"itemForm\\\">\\r\\n    <h3 class=\\\"mdl-dialog__title\\\">Item Details</h3>\\r\\n    <div class=\\\"mdl-dialog__content\\\">\\r\\n        <mdl-textfield type=\\\"number\\\" label=\\\"ID\\\" formControlName=\\\"id\\\" floating-label></mdl-textfield>\\r\\n        <mdl-select formControlName=\\\"icon\\\" label=\\\"Icon\\\" style=\\\"width: 100%;\\\" floating-label>\\r\\n            <mdl-option *ngFor=\\\"let icon of icons\\\" [value]=\\\"icon\\\">\\r\\n                <mdl-icon>{{ icon }}</mdl-icon>\\r\\n                <!-- <span>{{ icon }}</span> -->\\r\\n            </mdl-option>\\r\\n        </mdl-select>\\r\\n        <mdl-textfield type=\\\"text\\\" label=\\\"Name\\\" formControlName=\\\"name\\\" floating-label></mdl-textfield>\\r\\n        <mdl-textfield type=\\\"text\\\" label=\\\"Description\\\" rows=\\\"1\\\" maxrows=\\\"2\\\" formControlName=\\\"description\\\" floating-label></mdl-textfield>\\r\\n        <mdl-select #cupSelect formControlName=\\\"cup\\\" label=\\\"Cup\\\" autocomplete=\\\"true\\\" style=\\\"width: 100%;\\\" floating-label>\\r\\n            <mdl-option *ngFor=\\\"let c of cups\\\" [value]=\\\"c\\\">{{ c }}</mdl-option>\\r\\n        </mdl-select>\\r\\n        <mdl-select #flavorSelect formControlName=\\\"flavor\\\" label=\\\"Flavor\\\" autocomplete=\\\"true\\\" style=\\\"width: 100%;\\\" floating-label>\\r\\n            <mdl-option *ngFor=\\\"let f of flavors\\\" [value]=\\\"f\\\">{{ f }}</mdl-option>\\r\\n        </mdl-select>\\r\\n        <mdl-select #toppingSelect formControlName=\\\"topping\\\" label=\\\"Topping\\\" autocomplete=\\\"true\\\" style=\\\"width: 100%;\\\" floating-label>\\r\\n            <mdl-option *ngFor=\\\"let t of toppings\\\" [value]=\\\"t\\\">{{ t }}</mdl-option>\\r\\n        </mdl-select>\\r\\n    </div>\\r\\n    <div class=\\\"mdl-dialog__actions\\\">\\r\\n        <button mdl-button\\r\\n            mdl-ripple\\r\\n            type=\\\"button\\\"\\r\\n            (click)=\\\"save()\\\"\\r\\n            [disabled]=\\\"!itemForm.valid\\\"\\r\\n            mdl-button-type=\\\"raised\\\"\\r\\n            mdl-colored=\\\"primary\\\">\\r\\n                Save\\r\\n        </button>\\r\\n        <button mdl-button\\r\\n            mdl-ripple\\r\\n            type=\\\"button\\\"\\r\\n            (click)=\\\"cancel()\\\"\\r\\n            mdl-button-type=\\\"raised\\\">\\r\\n                Cancel\\r\\n        </button>\\r\\n        <button mdl-button\\r\\n            mdl-ripple\\r\\n            type=\\\"button\\\"\\r\\n            *ngIf=\\\"!isNew\\\"\\r\\n            (click)=\\\"delete()\\\"\\r\\n            mdl-button-type=\\\"raised\\\"\\r\\n            mdl-colored=\\\"accent\\\">\\r\\n                Delete\\r\\n        </button>\\r\\n    </div>\\r\\n</form>\"","module.exports = \".mdl-dialog__content {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center; }\\n  .mdl-dialog__content * {\\n    flex: 1 1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcHMvY29mZmVlL3NyYy9hcHAvaXRlbS1saXN0L2l0ZW0tbGlzdC1mb3JtL0M6XFxVc2Vyc1xcQW5kcmV3XFxEb2N1bWVudHNcXEdpdEh1YlxccHJvdmVuaXIvYXBwc1xcY29mZmVlXFxzcmNcXGFwcFxcaXRlbS1saXN0XFxpdGVtLWxpc3QtZm9ybVxcaXRlbS1saXN0LWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFhO0VBQ2IsdUJBQXNCO0VBQ3RCLG9CQUFtQixFQUd0QjtFQU5EO0lBS1EsVUFBUyxFQUFJIiwiZmlsZSI6ImFwcHMvY29mZmVlL3NyYy9hcHAvaXRlbS1saXN0L2l0ZW0tbGlzdC1mb3JtL2l0ZW0tbGlzdC1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1kbC1kaWFsb2dfX2NvbnRlbnQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICogeyBmbGV4OiAxIDE7IH1cclxufSJdfQ== */\"","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { MdlDialogReference } from '@angular-mdl/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { ItemListState } from '../../+state/item-list.reducer';\nimport { fromItemListActions } from '../../+state/item-list.actions';\nimport { CupOfCoffee } from '../../models/cup-of-coffee';\n\n@Component({\n  selector: 'provenir-item-list-form',\n  templateUrl: './item-list-form.component.html',\n  styleUrls: ['./item-list-form.component.scss']\n})\nexport class ItemListFormComponent implements OnInit {\n    constructor(private dialog: MdlDialogReference, @Inject('data') data: any, private store: Store<ItemListState>) {\n        this.isNew = data ? false : true;\n        this.itemForm = new FormGroup({\n            id: new FormControl(data ? data.id : 0, [Validators.required]),\n            icon: new FormControl(data ? data.icon : '', [Validators.required]),\n            name: new FormControl(data ? data.name : '', [Validators.required]),\n            description: new FormControl(data ? data.description : '', [Validators.required]),\n            cup: new FormControl(data ? data.cup : '', [Validators.required]),\n            flavor: new FormControl(data ? data.flavor : '', [Validators.required]),\n            topping: new FormControl(data ? data.topping : ''),\n        });\n    }\n\n    isNew: boolean;\n    itemForm: FormGroup; \n\n    icons = ['local_cafe', 'hot_tub', 'cake', 'whatshot', 'star_border', 'ac_unit'];\n    cups = ['regular', 'vacuum insulated', `world's best dog`, 'ice cream cone', 'beer mug'];\n    flavors = ['regular', 'french vanilla', 'columbian', 'strawberry', 'rum'];\n    toppings = ['none', 'whipped cream', 'salty foam', 'sprinkles'];\n\n    ngOnInit() {\n    }\n\n    save() {\n        const item = this.itemForm.value as CupOfCoffee;\n        if (this.isNew) {\n            this.store.dispatch(new fromItemListActions.AddItem(item));\n        } else {\n            this.store.dispatch(new fromItemListActions.UpdateItem(item));\n        }\n        this.dialog.hide();\n    }\n\n    delete() {\n        const item = this.itemForm.value as CupOfCoffee;\n        if (item.id) {\n            this.store.dispatch(new fromItemListActions.DeleteItem(item));\n        }\n        this.dialog.hide();\n    }\n\n    cancel() {\n        this.dialog.hide();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ItemListComponent } from './item-list.component';\n\nexport const itemListRoutes: Routes = [\n    {path: '', component: ItemListComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(itemListRoutes)],\n  exports: [RouterModule]\n})\nexport class ItemListRoutingModule { }\n","module.exports = \"<mdl-list>\\n    <mdl-list-item\\n        *ngFor=\\\"let item of itemList$ | async\\\"\\n        (click)=\\\"show(item, $event)\\\"\\n        lines=\\\"2\\\">\\n        <mdl-list-item-primary-content>\\n            <mdl-icon mdl-list-item-icon>{{ item.icon }}</mdl-icon>\\n            <span>{{ item.name }}</span>\\n            <mdl-list-item-sub-title>{{ item.description }}</mdl-list-item-sub-title>\\n        </mdl-list-item-primary-content>\\n        <mdl-list-item-secondary-content>\\n            <!-- <mdl-icon (click)=\\\"show(item, $event)\\\">edit</mdl-icon> -->\\n            <!-- <mdl-icon (click)=\\\"delete(item, $event)\\\">delete</mdl-icon> -->\\n        </mdl-list-item-secondary-content>\\n    </mdl-list-item>\\n</mdl-list>\\n<mdl-button\\n    class=\\\"fab\\\"\\n    mdl-button-type=\\\"fab\\\"\\n    (click)=\\\"show(null, $event)\\\"\\n    mdl-colored=\\\"primary\\\"\\n    mdl-ripple>\\n        <mdl-icon>add</mdl-icon>\\n</mdl-button>    \"","module.exports = \"mdl-list-item:hover {\\n  background: lightgray; }\\n\\n.fab {\\n  position: fixed;\\n  bottom: 1rem;\\n  right: 1rem; }\\n\\nmdl-list-item-sub-title {\\n  overflow-x: auto;\\n  text-overflow: ellipsis; }\\n\\n.mdl-dialog__actions {\\n  padding-left: 8px;\\n  flex-wrap: nowrap; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcHMvY29mZmVlL3NyYy9hcHAvaXRlbS1saXN0L0M6XFxVc2Vyc1xcQW5kcmV3XFxEb2N1bWVudHNcXEdpdEh1YlxccHJvdmVuaXIvYXBwc1xcY29mZmVlXFxzcmNcXGFwcFxcaXRlbS1saXN0XFxpdGVtLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxzQkFBcUIsRUFDeEI7O0FBRUQ7RUFDSSxnQkFBZTtFQUNmLGFBQVk7RUFDWixZQUFXLEVBQ2Q7O0FBRUQ7RUFDSSxpQkFBZ0I7RUFDaEIsd0JBQXVCLEVBQzFCOztBQUVEO0VBQ0ksa0JBQWlCO0VBQ2pCLGtCQUFpQixFQUNwQiIsImZpbGUiOiJhcHBzL2NvZmZlZS9zcmMvYXBwL2l0ZW0tbGlzdC9pdGVtLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtZGwtbGlzdC1pdGVtOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQ6IGxpZ2h0Z3JheTtcclxufVxyXG5cclxuLmZhYiB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBib3R0b206IDFyZW07XHJcbiAgICByaWdodDogMXJlbTtcclxufVxyXG5cclxubWRsLWxpc3QtaXRlbS1zdWItdGl0bGUge1xyXG4gICAgb3ZlcmZsb3cteDogYXV0bztcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG59XHJcblxyXG4ubWRsLWRpYWxvZ19fYWN0aW9ucyB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDhweDtcclxuICAgIGZsZXgtd3JhcDogbm93cmFwO1xyXG59Il19 */\"","import { Component, OnInit, InjectionToken } from '@angular/core';\nimport { MdlDialogComponent, MdlDialogService, IMdlCustomDialogConfiguration } from '@angular-mdl/core';\nimport { ItemListFormComponent } from './item-list-form/item-list-form.component';\nimport { Item } from '../models/item';\nimport { Store } from '@ngrx/store';\nimport { ItemListState } from '../+state/item-list.reducer';\nimport { fromItemListActions } from '../+state/item-list.actions';\nimport { itemListQuery } from '../+state/item-list.selectors';\nimport { CupOfCoffee } from '../models/cup-of-coffee';\n\n@Component({\n  selector: 'provenir-item-list',\n  templateUrl: './item-list.component.html',\n  styleUrls: ['./item-list.component.scss']\n})\nexport class ItemListComponent implements OnInit {\n    constructor(private modal: MdlDialogService, private store: Store<ItemListState>) { }\n\n    itemList$ = this.store.select(itemListQuery.getAllItemList);\n\n    ngOnInit() {\n        if (!localStorage.getItem('provenir-coffee')) {\n            const initialData: CupOfCoffee[] = [\n                new CupOfCoffee(1, 'local_cafe', 'Regular Coffee', 'coffee that is regular', 'regular', 'regular', 'none'),\n                new CupOfCoffee(2, 'whatshot', 'Fancy Coffee', 'like regular coffee but for fancy people', 'vacuum insulated', 'regular', 'none'),\n                new CupOfCoffee(3, 'star_border', 'Favorite Coffee', 'coffee for people that like sweet drinks', 'regular', 'french vanilla', 'salty foam'),\n                new CupOfCoffee(4, 'ac_unit', 'Ice Cream', 'I thought this was supposed to be coffee', 'ice cream cone', 'strawberry', 'sprinkles'),\n                new CupOfCoffee(5, 'hot_tub', 'uhhh', 'coffee but not for normal people', `world's best dog`, 'rum', 'sprinkles'),\n                new CupOfCoffee(6, 'local_cafe', 'Filler Coffee 1', `it's free real estate`, 'regular', 'regular', 'none'),\n                new CupOfCoffee(7, 'local_cafe', 'Filler Coffee 2', `it's free real estate`, 'regular', 'regular', 'none'),\n                new CupOfCoffee(8, 'local_cafe', 'Filler Coffee 3', `it's free real estate`, 'regular', 'regular', 'none'),\n                new CupOfCoffee(9, 'local_cafe', 'Filler Coffee 4', `it's free real estate`, 'regular', 'regular', 'none'),\n                new CupOfCoffee(99, 'cake', 'The Last Coffee', 'this coffee is at the bottom of the list and probably covered by the button', 'regular', 'regular', 'sprinkles'),\n            ];\n            console.log(initialData);\n            localStorage.setItem('provenir-coffee', JSON.stringify(initialData));\n        }\n        this.store.dispatch(new fromItemListActions.LoadItemList);\n    }\n\n    show(data: any, mouseEvent: MouseEvent) {\n        const config = {\n            clickOutsideToClose: true,\n            styles: {\n                'min-width': '300px',\n                'max-width': '80%',\n                'max-height': '80%',\n                'overflow-y': 'scroll',\n            },\n            isModal: true,\n            openFrom: mouseEvent,\n            enterTransitionDuration: 400,\n            leaveTransitionDuration: 400\n        };\n        \n        this.modal.showCustomDialog({\n            component: ItemListFormComponent,\n            providers: [{provide: 'data', useValue: data}],\n            ...config\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ItemListRoutingModule } from './item-list-routing.module';\nimport { ItemListComponent } from './item-list.component';\nimport { ItemListFormComponent } from './item-list-form/item-list-form.component';\nimport { MdlModule } from '@angular-mdl/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MdlSelectModule } from '@angular-mdl/select';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MdlModule,\n        MdlSelectModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ItemListRoutingModule\n    ],\n    declarations: [\n        ItemListComponent,\n        ItemListFormComponent\n    ],\n    entryComponents: [ItemListFormComponent],\n})\nexport class ItemListModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nexport const loginRoutes: Routes = [\n    {path: '', component: LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(loginRoutes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","module.exports = \"<div class=\\\"page-centered\\\">\\n    <form [formGroup]=\\\"loginForm\\\" class=\\\"flex-list\\\">\\n        <mdl-textfield\\n            label=\\\"Username\\\"\\n            name=\\\"username\\\"\\n            type=\\\"text\\\"\\n            formControlName=\\\"username\\\"\\n            floating-label\\n            pattern=\\\"^[a-zA-Z0-9._]+$\\\"\\n            error-msg=\\\"Please use valid characters\\\">\\n        </mdl-textfield>\\n        <mdl-textfield\\n            label=\\\"Password\\\"\\n            name=\\\"password\\\"\\n            type=\\\"password\\\"\\n            formControlName=\\\"password\\\"\\n            floating-label>\\n        </mdl-textfield>\\n        <p>\\n            The password is the same as the username\\n        </p>\\n        <button\\n            mdl-button\\n            type=\\\"button\\\"\\n            (click)=\\\"login()\\\"\\n            [disabled]=\\\"!loginForm.valid\\\"\\n            mdl-button-type=\\\"raised\\\"\\n            mdl-ripple\\n            mdl-colored=\\\"primary\\\">\\n                Submit\\n        </button>\\n    </form>\\n</div>\"","module.exports = \".page-centered {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100%;\\n  width: 100%; }\\n\\n.flex-list {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.flex-list > * {\\n  flex: 1 1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcHMvY29mZmVlL3NyYy9hcHAvbG9naW4vQzpcXFVzZXJzXFxBbmRyZXdcXERvY3VtZW50c1xcR2l0SHViXFxwcm92ZW5pci9hcHBzXFxjb2ZmZWVcXHNyY1xcYXBwXFxsb2dpblxcbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFhO0VBQ2Isb0JBQW1CO0VBQ25CLHdCQUF1QjtFQUN2QixhQUFZO0VBQ1osWUFBVyxFQUNkOztBQUVEO0VBQ0ksY0FBYTtFQUNiLHVCQUFzQixFQUN6Qjs7QUFFRDtFQUNJLFVBQVMsRUFDWiIsImZpbGUiOiJhcHBzL2NvZmZlZS9zcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZ2UtY2VudGVyZWQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uZmxleC1saXN0IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcblxyXG4uZmxleC1saXN0ID4gKiB7XHJcbiAgICBmbGV4OiAxIDE7XHJcbn0iXX0= */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\ninterface Authenticate {\n    username: string;\n    password: string;\n}\n\n@Component({\n    selector: 'provenir-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n    constructor(private router: Router) { }\n\n    loginForm = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required])\n    });\n\n    login() {\n        sessionStorage.setItem('username', this.loginForm.value.username);\n        sessionStorage.setItem('password', this.loginForm.value.password);\n        this.router.navigate(['/coffee']);\n    }\n\n    logout() {\n        sessionStorage.removeItem('username');\n        sessionStorage.removeItem('password');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n    constructor(private loginService: LoginService, private router: Router) { }\n\n    canActivate(): boolean {\n        console.log(sessionStorage);\n        if (this.loginService.isLoggedIn()) {\n            return true;\n        } else {\n            console.warn('Not logged in');\n            this.router.navigate(['login']);\n            return false;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MdlModule } from '@angular-mdl/core';\n\n@NgModule({\n    declarations: [LoginComponent],\n    imports: [\n        CommonModule,\n        MdlModule,\n        ReactiveFormsModule,\n        LoginRoutingModule\n    ]\n})\nexport class LoginModule { }\n","import { Injectable, Input } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { loginRoutes } from './login-routing.module';\n\ninterface Credentials {\n    username: string;\n    password: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginService {\n    isLoggedIn(): boolean {\n        const credentials = {\n            username: sessionStorage.getItem('username'), \n            password: sessionStorage.getItem('password')\n        };\n        return this.validateCredentials(credentials);\n    }\n\n    logout() {\n        sessionStorage.removeItem('username');\n        sessionStorage.removeItem('password');\n    }\n\n    private validateCredentials(credentials: Credentials): boolean {\n        return credentials.username && credentials.password && credentials.username === credentials.password;\n    }\n}\n","import { Item } from './item';\n\nexport class CupOfCoffee extends Item {\n    constructor(id: number, icon: string, name: string, description: string, cup: string, flavor: string, topping: string) {\n        super(id, icon, name, description);\n        this.cup = cup;\n        this.flavor = flavor;\n        this.topping = topping;\n    }\n    \n    cup: string;\n    flavor: string;\n    topping: string;\n    imgUrl?: string;\n}","export class Item {\r\n    constructor(id: number, icon: string, name: string, description: string) {\r\n        this.id = id;\r\n        this.icon = icon;\r\n        this.name = name;\r\n        this.description = description;\r\n    }\r\n    id: number;\r\n    icon: string;\r\n    name: string;\r\n    description: string;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}